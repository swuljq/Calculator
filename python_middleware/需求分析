需求分析：中间层接口

1. 接口概述
  中间层接口作为客户端与计算层服务之间的桥梁，负责表达式验证、格式转换和结果转发功能。

2. 功能需求
2.1 核心功能
  接收客户端提交的中缀表达式（JSON格式）
  验证表达式语法合法性
  将合法中缀表达式转换为逆波兰表示法（后缀表达式）
  将后缀表达式转发至计算层服务
  接收计算结果并返回给客户端

2.2 详细处理流程
2.2.1 输入处理
    接收POST请求，Content-Type为application/json

   请求体格式：

   json
   {
      "expression": "数学表达式字符串"
    }
2.2.2 表达式验证
需要实现的验证规则：

    字符合法性检查
    允许字符：数字(0-9)、字母(a-z,A-Z)、运算符(+ - * / ^)、括号(())、小数点(.)
    函数名称检查：支持sin, cos, tan等数学函数
    语法规则检查

       表达式不能以运算符（负号除外）开头
       不能出现连续两个运算符（负号作为一元运算符除外）
       运算符后不能直接跟右括号
       左括号后不能直接跟运算符（负号和左括号除外）
       右括号后不能直接跟数字或字母
       表达式不能以运算符结尾
       括号必须正确配对

    其他检查
        去除所有空格和无效字符
        检查函数调用格式正确性

2.2.3 表达式转换
   对通过验证的表达式进行中缀转后缀处理
   转换算法需正确处理：

       运算符优先级（^ > * / > + -）
       函数调用
       括号优先级
       负号处理（区分一元和二元）

2.2.4 计算层交互
   请求格式：

      json
      {
         "expression": "后缀表达式元素数组"
       }
       
   示例转换：

       中缀："sin(30)+2^3"
       后缀：["sin", "30", "2", "3", "^", "+"]

2.2.5 结果返回
   成功响应：

       json
       {
          "result": 数值结果
       }
   错误响应：

       json
       {
          "error": "错误描述信息"
       }

3 可靠性需求
   计算层服务不可用时，应返回适当错误信息
   网络通信失败应返回适当错误信息

4. 接口规范
4.1 请求规范
   方法：POST

   路径：/compute

   Headers：

   Content-Type: application/json

       json
       {
          "expression": "字符串表达式"
       }
       
4.2 响应规范
   成功响应

       json
       {
         "result": 数值结果
       }
   错误响应

       json
       {
          "error": "错误描述"
       }
   
5. 异常处理
5.1 预期错误
   表达式语法错误
   不支持的函数或运算符
   括号不匹配
   非法字符

5.2 非预期错误
   计算层服务不可用
   网络通信故障
   系统内部错误

6. 部署信息
    计算层服务地址：http://172.20.10.2:8000/calc
    中间层接口路径：/compute
